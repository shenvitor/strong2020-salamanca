[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools>=61.2",
    "setuptools_scm",
]

[project]
authors = [
    {name = "Common Partial Wave Analysis", email = "compwa-admin@ep1.rub.de"},
    {name = "STRONG2020"},
]
description = "Jupyter notebooks for the STRONG2020 school in Salamanca, 2023"
dynamic = ["version"]
name = "strong2020-salamanca"
requires-python = "~=3.13.0"

[dependency-groups]
dev = [
    "poethepoet",
    "ruff",
    "sphinx-autobuild",
    {include-group = "doc"},
    {include-group = "jupyter"},
    {include-group = "test"},
]
doc = [
    "ipympl",
    "myst-nb",
    "sphinx",
    "sphinx-api-relink",
    "sphinx-book-theme",
    "sphinx-comments",
    "sphinx-copybutton",
    "sphinx-design",
    "sphinx-exercise",
    "sphinx-togglebutton",
    {include-group = "notebooks"},
]
jupyter = [
    "jupyterlab",
    "jupyterlab-code-formatter",
    "jupyterlab-git",
    "jupyterlab-lsp",
    "jupyterlab-myst",
    "jupyterlab-quickopen",
    "python-lsp-ruff",
    "python-lsp-server[rope]",
    {include-group = "notebooks"},
]
notebooks = ["pyproject-local-kernel"]
test = [
    "nbmake",
    {include-group = "notebooks"},
]

[tool.poe]
executor.type = "uv"

[tool.poe.tasks.all]
help = "Run all continuous integration (CI) tasks locally"
sequence = [
    "style",
    "linkcheck",
    "docnb-force",
]

[tool.poe.tasks.doc]
cmd = """
sphinx-build \
    --builder=html \
    --fail-on-warning \
    --keep-going \
    --show-traceback \
    docs/ \
    docs/_build/html/
"""
env = {PYTHONWARNINGS = ""}
help = "Build documentation and API"

[tool.poe.tasks.doclive]
cmd = """
sphinx-autobuild \
    --builder=html \
    --open-browser \
    --port=0 \
    --re-ignore=/__pycache__(/.*)?$ \
    --re-ignore=/_build(/.*)?$ \
    --re-ignore=/_images(/.*)?$ \
    --re-ignore=/\\.cache(/.*)?$ \
    --re-ignore=/\\.egg-info(/.*)?$ \
    --re-ignore=/\\.ipynb_checkpoints(/.*)?$ \
    --re-ignore=/\\.venv(/.*)?$ \
    --re-ignore=/\\.virtual_documents(/.*)?$ \
    --re-ignore=/api(/.*)?$ \
    --re-ignore=/docs$ \
    --re-ignore=/version\\.py$ \
    --re-ignore=\\.csv$ \
    --re-ignore=\\.egg-info(/.*)?$ \
    --re-ignore=\\.gif$ \
    --re-ignore=\\.gitignore$ \
    --re-ignore=\\.gv$ \
    --re-ignore=\\.inv$ \
    --re-ignore=\\.json$ \
    --re-ignore=\\.pickle$ \
    --re-ignore=\\.pkl$ \
    --re-ignore=\\.png$ \
    --re-ignore=\\.root$ \
    --re-ignore=\\.svg$ \
    --re-ignore=\\.tmp$ \
    --re-ignore=\\.txt$ \
    --re-ignore=\\.ya?ml$ \
    --watch=src \
    docs/ \
    docs/_build/html/
"""
help = "Set up a server to directly preview changes to the HTML pages"

[tool.poe.tasks.docnb]
env = {EXECUTE_NB = "yes"}
help = "Build documentation and API with cached notebook execution"
sequence = ["doc"]

[tool.poe.tasks.docnb-force]
env = {FORCE_EXECUTE_NB = "yes"}
help = "Build documentation and API with notebook execution (no cache)"
sequence = ["doc"]

[tool.poe.tasks.docnblive]
env = {EXECUTE_NB = "yes"}
help = "Set up a server to directly preview changes to the HTML pages with cached notebook execution"
sequence = ["doclive"]

[tool.poe.tasks.lab]
args = [{name = "paths", default = "", positional = true}]
cmd = "jupyter lab ${paths}"
help = "Run Jupyter Lab"

[tool.poe.tasks.linkcheck]
cmd = """
sphinx-build \
    --builder=linkcheck \
    --show-traceback \
    docs/ \
    docs/_build/linkcheck/
"""
env = {PYTHONWARNINGS = ""}
help = "Check external links in the documentation (requires internet connection)"

[tool.poe.tasks.nb]
cmd = "uv run --group test --isolated --no-dev pytest"
help = "Run all notebooks"

[tool.poe.tasks.style]
cmd = "uv run --isolated --no-dev pre-commit run --all-files"
help = "Perform all linting, formatting, and spelling checks"

[tool.pytest.ini_options]
addopts = [
    "--color=yes",
    "--durations=0",
    "--nbmake",
    "--nbmake-timeout=0",
]
filterwarnings = [
    "error",
]
norecursedirs = [
    ".ipynb_checkpoints",
    ".virtual_documents",
    "_build",
]

[tool.ruff]
extend-include = ["*.ipynb"]
preview = true
show-fixes = true

[tool.ruff.format]
docstring-code-format = true
line-ending = "lf"

[tool.ruff.lint]
ignore = [
    "ANN401",
    "COM812",
    "CPY001",
    "D101",
    "D102",
    "D103",
    "D105",
    "D107",
    "D203",
    "D213",
    "D407",
    "D416",
    "DOC",
    "E501",
    "FURB101",
    "FURB103",
    "FURB140",
    "G004",
    "ISC001",
    "PLW1514",
    "PT001",
    "PTH",
    "SIM108",
]
select = ["ALL"]
task-tags = ["cspell"]

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["display"]

[tool.ruff.lint.flake8-comprehensions]
allow-dict-calls-with-keyword-arguments = true

[tool.ruff.lint.isort]
split-on-trailing-comma = false

[tool.ruff.lint.per-file-ignores]
"*.ipynb" = [
    "ANN",
    "B018",
    "C90",
    "D",
    "E303",
    "E703",
    "N806",
    "N816",
    "PLR09",
    "PLR2004",
    "PLW0602",
    "PLW0603",
    "S101",
    "T20",
    "TC00",
]
"docs/*" = [
    "INP001",
    "S101",
    "S113",
]
"docs/conf.py" = ["D100"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.tomlsort]
all = false
ignore_case = true
in_place = true
sort_first = [
    "build-system",
    "project",
]
spaces_indent_inline_array = 4
trailing_comma_inline_array = true
